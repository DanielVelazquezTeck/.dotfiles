{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Redux: Create Store": {
    "prefix": "rxstore",
    "body": [
      "import { createStore } from 'redux'",
      "import reducers from '../reducers'",
      "",
      "const initialValue = {$1}",
      "export const store = createStore(reducers, initialValue)"
    ],
    "description": "Create Basic Redux Store"
  },
  "Redux: Create allReducers": {
    "prefix": "rxar",
    "body": [
      "import { combineReducers } from 'redux'",
      "import $2 from './$1'",
      "",
      "const allReducers = combineReducers({",
      "\t$2",
      "})",
      "export default allReducers"
    ],
    "description": "Redux: Create allReducers in reducers/index.js"
  },
  "React Admin: Boilerplate": {
    "prefix": "rab",
    "body": [
      "import React from 'react';",
      "import { Admin, Resource, ListGuesser } from 'react-admin';",
      "import simpleRestProvider from 'ra-data-simple-rest';",
      "",
      "const dataProvider = simpleRestProvider('$1');",
      "",
      "const App = () => (",
      "\t<Admin dataProvider={dataProvider}>",
      "\t\t<Resource name='$2' list={ListGuesser} />",
      "\t</Admin>",
      ");",
      "",
      "export default App"
    ],
    "description": "React Admin: Boilerplate"
  },
  "React Admin: Resource": {
    "prefix": "rar",
    "body": ["<Resource name='$1' list={$2} edit={$3} create={$4}/>"],
    "description": "React Admin <Resource/>"
  },
  "useFetch": {
    "prefix": "useFetch",
    "body": [
      "import useFetch from \"react-fetch-hook\";",
      "const {isLoading, error, data} = useFetch(\"$1\")"
    ],
    "description": "useFetch: Basic structure \n npm i -S use-http"
  },
  "Lambda: Hello World": {
    "prefix": "lhw",
    "body": [
      "exports.handler = async (event) => {",
      "\tconsole.log(event);",
      "\treturn ${1:\"Hello Lambda\"}",
      "};"
    ],
    "description": "useFetch: Basic structure \n npm i -S use-http"
  }
}
